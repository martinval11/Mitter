import {
  Typography,
  CssBaseline,
  Container,
  Button,
  TextField,
  FormControlLabel,
  Checkbox,
  Link,
  ThemeProvider,
} from '@mui/material';

import Head from 'next/head';

import { useRef, useState, useEffect } from 'react';
import { useRouter } from 'next/router';

import { theme } from '@/lib/theme';
import { supabase } from '@/lib/supabaseClient';
import { decrypt } from '@/lib/security/decrypt';

import styles from '@/styles/form.module.css';

import Input from '@/components/Input/Input';
import Error from '@/components/Error/Error';

const Login = () => {
  const [checked, setChecked] = useState(true);
  const [error, setError] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');

  const userRef: any = useRef<HTMLInputElement>(null);
  const passRef = useRef<HTMLInputElement>(null);

  const router = useRouter();

  const handleChange = (event: any) => {
    setChecked(event.target.checked);
  };

  const login = async (event: any) => {
    event.preventDefault();

    const { data: users, error } = await supabase
      .from('users')
      .select('name, password');

    if (error) {
      setError(true);
      setErrorMessage('Something went wrong');
      return;
    }

    const searchUser = users!.find(
      (user: any) =>
        user.name === userRef.current?.value &&
        decrypt(user.password).message === passRef.current?.value
    );

    if (searchUser) {
      localStorage.setItem('username', userRef.current?.value);
      localStorage.setItem('saveSession', checked.toString());
      
      router.push('/home');
      return;
    }

    setError(true);
    setErrorMessage('Invalid username or password');
  };

  useEffect(() => {
    const session = localStorage.getItem('saveSession');

    if (session === 'true') {
      router.push('/home');
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <Head>
        <title>Log in to Mitter / Mitter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </Head>

      <ThemeProvider theme={theme}>
        <CssBaseline />

        <Container
          maxWidth="md"
          sx={{
            height: '100vh',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
          }}
        >
          <form onSubmit={login} className={styles.form}>
            <Typography variant="h3">Log in to Mitter</Typography>

            <Input mt={3} type="text" label="Username" inputRef={userRef} />

            <Input type="password" inputRef={passRef} label="Password" />

            <FormControlLabel
              control={
                <Checkbox
                  checked={checked}
                  onChange={handleChange}
                  inputProps={{ 'aria-label': 'controlled' }}
                />
              }
              label="Save session"
            />

            <Button type="submit" variant="contained" sx={{ mt: 2 }}>
              Log in
            </Button>
            <Button variant="outlined" sx={{ mt: 2, mb: 1 }}>
              Forgot password?
            </Button>

            <p>
              Don&apos;t have an account? <Link href="/">Sign up</Link>
            </p>
          </form>
        </Container>

        {error && <Error message={errorMessage} />}
      </ThemeProvider>
    </>
  );
};

export default Login;
