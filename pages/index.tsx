import { ThemeProvider } from '@emotion/react';
import {
  Typography,
  CssBaseline,
  Container,
  Button,
  TextField,
  Box,
  FormControlLabel,
  Checkbox,
  Link,
} from '@mui/material';

import Head from 'next/head';

import { theme } from '../lib/theme';
import { supabase } from 'lib/supabaseClient';
import Error from '@/components/Error/Error';

import { useState, useRef, useEffect } from 'react';
import { useRouter } from 'next/router';

const Index = () => {
  const [checked, setChecked] = useState(true);
  const [error, setError] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setChecked(event.target.checked);
  };

  const userRef: any = useRef<HTMLInputElement>(null);
  const emailRef = useRef<HTMLInputElement>(null);
  const passRef = useRef<HTMLInputElement>(null);
  const confirmPassRef = useRef<HTMLInputElement>(null);

  const router = useRouter();

  const createAccount = async (event: any) => {
    event.preventDefault();

    if (passRef.current?.value !== confirmPassRef.current?.value) {
      setError(true);
      setErrorMessage('Passwords do not match');
      return;
    }

    const { error } = await supabase.from('users').insert([
      {
        name: userRef.current?.value,
        email: emailRef.current?.value,
        password: passRef.current?.value,
      },
    ]);

    if (error) {
      setError(true);
      setErrorMessage('Something went wrong');
    } else {
      localStorage.setItem('username', userRef.current?.value);
      localStorage.setItem('saveSession', checked.toString());
      router.push('/home');
    }
  };

  useEffect(() => {
    if (localStorage.getItem('saveSession') === 'true') {
      router.push('/home');
    }
  }, []);

  return (
    <>
      <Head>
        <title>Sign up for Mitter / Mitter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </Head>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <Container
          maxWidth="md"
          sx={{
            height: '100vh',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
          }}
        >
          <form onSubmit={createAccount}>
            <Box
              sx={{
                display: 'flex',
                flexDirection: 'column',
                background: '#181818',
                borderRadius: '8px',
                padding: '4rem 5rem',
              }}
            >
              <Typography variant="h3">Create your account</Typography>

              <TextField
                id="outlined-basic"
                type="email"
                label="Email"
                variant="outlined"
                inputRef={emailRef}
                required
                sx={{ mt: 3 }}
              />
              <TextField
                id="outlined-basic"
                type="text"
                label="Username"
                variant="outlined"
                inputRef={userRef}
                required
                autoComplete="off"
                sx={{ mt: 2 }}
              />
              <TextField
                id="outlined-basic"
                type="password"
                label="Password"
                variant="outlined"
                inputRef={passRef}
                required
                inputProps={{
                  minLength: 8,
                  maxLength: 20,
                }}
                sx={{ mt: 2 }}
              />
              <TextField
                id="outlined-basic"
                type="password"
                label="Confirm Password"
                variant="outlined"
                autoComplete="off"
                inputRef={confirmPassRef}
                required
                sx={{ mt: 2 }}
              />

              <FormControlLabel
                control={
                  <Checkbox
                    checked={checked}
                    onChange={handleChange}
                    inputProps={{ 'aria-label': 'controlled' }}
                  />
                }
                label="Save session"
              />

              <Button type="submit" variant="contained" sx={{ mt: 2 }}>
                Sign up
              </Button>

              <p>
                Have an account already? <Link href="/login">Log in</Link>
              </p>
            </Box>
          </form>
        </Container>

        {error && <Error message={errorMessage} />}
      </ThemeProvider>
    </>
  );
};

export default Index;
